# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.proto import task_pb2 as src_dot_proto_dot_task__pb2


class TaskServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createTask = channel.unary_unary(
                '/taskPackage.TaskService/createTask',
                request_serializer=src_dot_proto_dot_task__pb2.Task.SerializeToString,
                response_deserializer=src_dot_proto_dot_task__pb2.Transaction.FromString,
                )
        self.getTasks = channel.unary_stream(
                '/taskPackage.TaskService/getTasks',
                request_serializer=src_dot_proto_dot_task__pb2.NoParameters.SerializeToString,
                response_deserializer=src_dot_proto_dot_task__pb2.Task.FromString,
                )
        self.streamCreateTask = channel.stream_unary(
                '/taskPackage.TaskService/streamCreateTask',
                request_serializer=src_dot_proto_dot_task__pb2.Task.SerializeToString,
                response_deserializer=src_dot_proto_dot_task__pb2.Transactions.FromString,
                )
        self.streamContinuesTaskCreation = channel.stream_stream(
                '/taskPackage.TaskService/streamContinuesTaskCreation',
                request_serializer=src_dot_proto_dot_task__pb2.Task.SerializeToString,
                response_deserializer=src_dot_proto_dot_task__pb2.Transaction.FromString,
                )


class TaskServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamCreateTask(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamContinuesTaskCreation(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createTask': grpc.unary_unary_rpc_method_handler(
                    servicer.createTask,
                    request_deserializer=src_dot_proto_dot_task__pb2.Task.FromString,
                    response_serializer=src_dot_proto_dot_task__pb2.Transaction.SerializeToString,
            ),
            'getTasks': grpc.unary_stream_rpc_method_handler(
                    servicer.getTasks,
                    request_deserializer=src_dot_proto_dot_task__pb2.NoParameters.FromString,
                    response_serializer=src_dot_proto_dot_task__pb2.Task.SerializeToString,
            ),
            'streamCreateTask': grpc.stream_unary_rpc_method_handler(
                    servicer.streamCreateTask,
                    request_deserializer=src_dot_proto_dot_task__pb2.Task.FromString,
                    response_serializer=src_dot_proto_dot_task__pb2.Transactions.SerializeToString,
            ),
            'streamContinuesTaskCreation': grpc.stream_stream_rpc_method_handler(
                    servicer.streamContinuesTaskCreation,
                    request_deserializer=src_dot_proto_dot_task__pb2.Task.FromString,
                    response_serializer=src_dot_proto_dot_task__pb2.Transaction.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'taskPackage.TaskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TaskService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/taskPackage.TaskService/createTask',
            src_dot_proto_dot_task__pb2.Task.SerializeToString,
            src_dot_proto_dot_task__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/taskPackage.TaskService/getTasks',
            src_dot_proto_dot_task__pb2.NoParameters.SerializeToString,
            src_dot_proto_dot_task__pb2.Task.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def streamCreateTask(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/taskPackage.TaskService/streamCreateTask',
            src_dot_proto_dot_task__pb2.Task.SerializeToString,
            src_dot_proto_dot_task__pb2.Transactions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def streamContinuesTaskCreation(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/taskPackage.TaskService/streamContinuesTaskCreation',
            src_dot_proto_dot_task__pb2.Task.SerializeToString,
            src_dot_proto_dot_task__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
